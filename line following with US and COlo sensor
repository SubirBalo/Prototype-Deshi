// Define pins for motor driver
const int in1Pin = 11;
const int in2Pin = 10;
const int in3Pin = 13;
const int in4Pin = 12;
const int enA = 5;
const int enB = 6;
// Define pins for ultrasonic sensor
const int trigPin = 2;
const int echoPin = 3;
// Define pins for IR sensor
const int leftsensorPin = 8;
const int rightsensorPin = 7;
// Define variables for ultrasonic sensor
long duration;
int distance;
int motorSpeed =110;
#define s0 A0       // Module pins wiring to analog pins
#define s1 A1
#define s2 A2
#define s3 A3
#define out A4
int Red = 0, Blue = 0, Green = 0;  // RGB values

void forward() {
 digitalWrite(in1Pin, LOW);
 digitalWrite(in2Pin, HIGH);
 digitalWrite(in3Pin, LOW);
 digitalWrite(in4Pin, HIGH);
}
void forwardU() {
 analogWrite(enA, motorSpeed);
 analogWrite(enB,motorSpeed );
 digitalWrite(in1Pin, LOW);
 digitalWrite(in2Pin, HIGH);
 digitalWrite(in3Pin, LOW);
 digitalWrite(in4Pin, HIGH);
}
void left() {
 analogWrite(enA, motorSpeed);
 analogWrite(enB,motorSpeed );
 digitalWrite(in1Pin, LOW);
 digitalWrite(in2Pin, HIGH);
 digitalWrite(in3Pin, HIGH);
 digitalWrite(in4Pin, LOW);
}
void stop() {
 digitalWrite(in1Pin, LOW);
 digitalWrite(in2Pin, LOW);
 digitalWrite(in3Pin, LOW);
 digitalWrite(in4Pin, LOW);
}
void right() {
 analogWrite(enA, motorSpeed);
 analogWrite(enB,motorSpeed );
 digitalWrite(in1Pin, HIGH);
 digitalWrite(in2Pin, LOW);
 digitalWrite(in3Pin, LOW);
 digitalWrite(in4Pin, HIGH);
}
void turn() {
 analogWrite(enA, 0);
 analogWrite(enB,100 );
 digitalWrite(in1Pin, LOW);
 digitalWrite(in2Pin, LOW);
 digitalWrite(in3Pin, LOW);
 digitalWrite(in4Pin, HIGH);
}
void GetColors()  
{    
  digitalWrite(s2, LOW);  // S2/S3 levels define which set of photodiodes we are using: LOW/LOW is for RED, LOW/HIGH is for Blue, and HIGH/HIGH is for Green
  digitalWrite(s3, LOW);                                           
  Red = pulseIn(out, digitalRead(out) == HIGH ? LOW : HIGH);  // Measure the duration until "out" goes LOW, then measure until it goes HIGH again
  delay(20);  
  digitalWrite(s3, HIGH);  // Select the other color (set of photodiodes) and measure the value
  Blue = pulseIn(out, digitalRead(out) == HIGH ? LOW : HIGH);
  delay(20);  
  digitalWrite(s2, HIGH);  
  Green = pulseIn(out, digitalRead(out) == HIGH ? LOW : HIGH);
  delay(20);  
}

void setup() {
  Serial.begin(9600);
 // Initialize motor driver pins
 pinMode(in1Pin, OUTPUT);
 pinMode(in2Pin, OUTPUT);
 pinMode(in3Pin, OUTPUT);
 pinMode(in4Pin, OUTPUT);
 pinMode(enA, OUTPUT);
 pinMode(enB, OUTPUT);
 // Initialize ultrasonic sensor pins
 pinMode(trigPin, OUTPUT);
 pinMode(echoPin, INPUT);
 // Initialize IR sensor pin
 pinMode(leftsensorPin, INPUT);
 pinMode(rightsensorPin, INPUT);
 // Set initial speed for both motors
 analogWrite(enA, motorSpeed);
 analogWrite(enB,motorSpeed );
    pinMode(s0, OUTPUT);    // Pin modes
   pinMode(s1, OUTPUT);
   pinMode(s2, OUTPUT);
   pinMode(s3, OUTPUT);
   pinMode(out, INPUT);

   Serial.begin(9600);   // Initialize the serial monitor baud rate
   
   digitalWrite(s0, HIGH); // Setting S0/S1 to HIGH/HIGH levels means the output frequency scaling is at 100%
   digitalWrite(s1, HIGH); // LOW/LOW is off, HIGH/LOW is 20%, and LOW/HIGH is 2%
}
void loop() {
  
 // Read IR sensor input
 int leftsensorValue = digitalRead(leftsensorPin);
 int rightsensorValue = digitalRead(rightsensorPin);
analogWrite(enA, motorSpeed);
 analogWrite(enB,motorSpeed );
 if (leftsensorValue == 1 && rightsensorValue == 1) {
 forward();
 } else if (leftsensorValue == 0 && rightsensorValue == 1) {
 right();
 } else if (leftsensorValue == 1 && rightsensorValue == 0) {
 left();

 }
 //color sensor
   GetColors();  // Execute the GetColors function to get the value of each RGB color

 // Ultrasonic sensor code

 digitalWrite(trigPin, LOW);
 delayMicroseconds(2);
 digitalWrite(trigPin, HIGH);
 delayMicroseconds(7);
 digitalWrite(trigPin, LOW);
 duration = pulseIn(echoPin, HIGH);
 distance = duration/34.2;
 if(distance==0){
 distance=100;
 }


 if(distance < 20 )
 {
      Serial.println(distance);

  if (Red < Blue && Red <= Green && Red < 23) {  // If Red value is the lowest one and smaller than 23, it's likely Red
    Serial.println("Red");
 left();
 delay(900);
 forward();
 delay(1400);
 right();
 delay(1200);
 forwardU();
 leftsensorValue = digitalRead(leftsensorPin);
 rightsensorValue = digitalRead(rightsensorPin);

while(leftsensorValue == 1 && rightsensorValue == 1 ){
 leftsensorValue = digitalRead(leftsensorPin);
rightsensorValue = digitalRead(rightsensorPin);
}
 stop();
 delay(2000);
 forwardU();
 delay(100);
 rightsensorValue = digitalRead(rightsensorPin);
 turn();
 while(rightsensorValue == 1){
 rightsensorValue = digitalRead(rightsensorPin);
}
break;
}
else if (Blue < Green && Blue < Red && Blue < 20){
  stop();
      Serial.println("Blue");

}
  } 
delay(500);
}
